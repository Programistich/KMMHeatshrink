name: Build Swift Package

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build iOS framework
        id: buildPackage
        run: ./gradlew createSwiftPackage
      - name: Upload Swift Package directory
        uses: actions/upload-artifact@v2
        with:
          name: swiftpackage
          path: shared/swiftpackage
          retention-days: 1

  tags_changes:
    name: "Checking that tag version has changed"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Get change status for tag.env
        id: changed-changelog
        uses: tj-actions/changed-files@v18.7
        with:
          files: .github/workflows/tag.env
      - name: Failed if tag.env not changed
        if: steps.changed-changelog.outputs.any_changed != 'true'
        uses: actions/github-script@v3
        with:
          script: core.setFailed('tag.env has not changed! You need to write human-readable changes in each Pull Request')

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@master
      - name: Setup env
        id: vars
        run: |
          export $(cat .github/workflows/tag.env | xargs)
          echo "::set-output name=tag::${TAG}"
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          release_name: Release ${{ steps.vars.outputs.tag }}

  push:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download directory with swift package
        uses: actions/download-artifact@v2
        with:
          name: swiftpackage
          path: swiftpackage
      - name: Push directory to another repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: 'swiftpackage'
          destination-github-username: 'Programistich'
          destination-repository-name: 'KMMHeatshrinkSwiftPackage'
          user-email: dzhos.oleksii@gmail.com
          target-branch: main